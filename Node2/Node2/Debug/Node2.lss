
Node2.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000b40  00080000  00080000  00010000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .relocate     00000434  20000000  00080b40  00020000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000084  20000434  00080f74  00020434  2**2
                  ALLOC
  3 .stack        00000400  200004b8  00080ff8  00020434  2**0
                  ALLOC
  4 .heap         00000200  200008b8  000813f8  00020434  2**0
                  ALLOC
  5 .ARM.attributes 00000029  00000000  00000000  00020434  2**0
                  CONTENTS, READONLY
  6 .comment      00000059  00000000  00000000  0002045d  2**0
                  CONTENTS, READONLY
  7 .debug_info   00003f28  00000000  00000000  000204b6  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00000d86  00000000  00000000  000243de  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    00001111  00000000  00000000  00025164  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_aranges 00000168  00000000  00000000  00026275  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000140  00000000  00000000  000263dd  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_macro  00011a44  00000000  00000000  0002651d  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_line   000030c6  00000000  00000000  00037f61  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    0005416b  00000000  00000000  0003b027  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_frame  000004b4  00000000  00000000  0008f194  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00080000 <exception_table>:
   80000:	b8 08 00 20 65 03 08 00 61 03 08 00 61 03 08 00     ... e...a...a...
   80010:	61 03 08 00 61 03 08 00 61 03 08 00 00 00 00 00     a...a...a.......
	...
   8002c:	61 03 08 00 61 03 08 00 00 00 00 00 61 03 08 00     a...a.......a...
   8003c:	61 03 08 00 61 03 08 00 61 03 08 00 61 03 08 00     a...a...a...a...
   8004c:	61 03 08 00 61 03 08 00 61 03 08 00 61 03 08 00     a...a...a...a...
   8005c:	61 03 08 00 e1 08 08 00 61 03 08 00 00 00 00 00     a.......a.......
   8006c:	61 03 08 00 61 03 08 00 61 03 08 00 61 03 08 00     a...a...a...a...
	...
   80084:	61 03 08 00 61 03 08 00 61 03 08 00 61 03 08 00     a...a...a...a...
   80094:	61 03 08 00 61 03 08 00 61 03 08 00 61 03 08 00     a...a...a...a...
   800a4:	00 00 00 00 61 03 08 00 61 03 08 00 61 03 08 00     ....a...a...a...
   800b4:	61 03 08 00 61 03 08 00 61 03 08 00 61 03 08 00     a...a...a...a...
   800c4:	61 03 08 00 61 03 08 00 61 03 08 00 61 03 08 00     a...a...a...a...
   800d4:	61 03 08 00 61 03 08 00 61 03 08 00 61 03 08 00     a...a...a...a...
   800e4:	61 03 08 00 61 03 08 00 e5 02 08 00 61 03 08 00     a...a.......a...

000800f4 <__do_global_dtors_aux>:
   800f4:	b510      	push	{r4, lr}
   800f6:	4c05      	ldr	r4, [pc, #20]	; (8010c <__do_global_dtors_aux+0x18>)
   800f8:	7823      	ldrb	r3, [r4, #0]
   800fa:	b933      	cbnz	r3, 8010a <__do_global_dtors_aux+0x16>
   800fc:	4b04      	ldr	r3, [pc, #16]	; (80110 <__do_global_dtors_aux+0x1c>)
   800fe:	b113      	cbz	r3, 80106 <__do_global_dtors_aux+0x12>
   80100:	4804      	ldr	r0, [pc, #16]	; (80114 <__do_global_dtors_aux+0x20>)
   80102:	f3af 8000 	nop.w
   80106:	2301      	movs	r3, #1
   80108:	7023      	strb	r3, [r4, #0]
   8010a:	bd10      	pop	{r4, pc}
   8010c:	20000434 	.word	0x20000434
   80110:	00000000 	.word	0x00000000
   80114:	00080b40 	.word	0x00080b40

00080118 <frame_dummy>:
   80118:	4b0c      	ldr	r3, [pc, #48]	; (8014c <frame_dummy+0x34>)
   8011a:	b143      	cbz	r3, 8012e <frame_dummy+0x16>
   8011c:	480c      	ldr	r0, [pc, #48]	; (80150 <frame_dummy+0x38>)
   8011e:	b510      	push	{r4, lr}
   80120:	490c      	ldr	r1, [pc, #48]	; (80154 <frame_dummy+0x3c>)
   80122:	f3af 8000 	nop.w
   80126:	480c      	ldr	r0, [pc, #48]	; (80158 <frame_dummy+0x40>)
   80128:	6803      	ldr	r3, [r0, #0]
   8012a:	b923      	cbnz	r3, 80136 <frame_dummy+0x1e>
   8012c:	bd10      	pop	{r4, pc}
   8012e:	480a      	ldr	r0, [pc, #40]	; (80158 <frame_dummy+0x40>)
   80130:	6803      	ldr	r3, [r0, #0]
   80132:	b933      	cbnz	r3, 80142 <frame_dummy+0x2a>
   80134:	4770      	bx	lr
   80136:	4b09      	ldr	r3, [pc, #36]	; (8015c <frame_dummy+0x44>)
   80138:	2b00      	cmp	r3, #0
   8013a:	d0f7      	beq.n	8012c <frame_dummy+0x14>
   8013c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   80140:	4718      	bx	r3
   80142:	4b06      	ldr	r3, [pc, #24]	; (8015c <frame_dummy+0x44>)
   80144:	2b00      	cmp	r3, #0
   80146:	d0f5      	beq.n	80134 <frame_dummy+0x1c>
   80148:	4718      	bx	r3
   8014a:	bf00      	nop
   8014c:	00000000 	.word	0x00000000
   80150:	00080b40 	.word	0x00080b40
   80154:	20000438 	.word	0x20000438
   80158:	00080b40 	.word	0x00080b40
   8015c:	00000000 	.word	0x00000000

00080160 <can_init>:
   80160:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   80164:	1855      	adds	r5, r2, r1
   80166:	2908      	cmp	r1, #8
   80168:	bf98      	it	ls
   8016a:	2a08      	cmpls	r2, #8
   8016c:	d864      	bhi.n	80238 <can_init+0xd8>
   8016e:	460e      	mov	r6, r1
   80170:	2d08      	cmp	r5, #8
   80172:	dc61      	bgt.n	80238 <can_init+0xd8>
   80174:	4a32      	ldr	r2, [pc, #200]	; (80240 <can_init+0xe0>)
   80176:	6813      	ldr	r3, [r2, #0]
   80178:	f023 0301 	bic.w	r3, r3, #1
   8017c:	6013      	str	r3, [r2, #0]
   8017e:	6913      	ldr	r3, [r2, #16]
   80180:	4b30      	ldr	r3, [pc, #192]	; (80244 <can_init+0xe4>)
   80182:	f44f 7440 	mov.w	r4, #768	; 0x300
   80186:	645c      	str	r4, [r3, #68]	; 0x44
   80188:	6f1c      	ldr	r4, [r3, #112]	; 0x70
   8018a:	f024 0403 	bic.w	r4, r4, #3
   8018e:	671c      	str	r4, [r3, #112]	; 0x70
   80190:	2403      	movs	r4, #3
   80192:	605c      	str	r4, [r3, #4]
   80194:	665c      	str	r4, [r3, #100]	; 0x64
   80196:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
   8019a:	4c2b      	ldr	r4, [pc, #172]	; (80248 <can_init+0xe8>)
   8019c:	f8c3 410c 	str.w	r4, [r3, #268]	; 0x10c
   801a0:	f8d3 4100 	ldr.w	r4, [r3, #256]	; 0x100
   801a4:	f444 6400 	orr.w	r4, r4, #2048	; 0x800
   801a8:	f8c3 4100 	str.w	r4, [r3, #256]	; 0x100
   801ac:	6150      	str	r0, [r2, #20]
   801ae:	42a9      	cmp	r1, r5
   801b0:	dc40      	bgt.n	80234 <can_init+0xd4>
   801b2:	460a      	mov	r2, r1
   801b4:	2400      	movs	r4, #0
   801b6:	46a1      	mov	r9, r4
   801b8:	f8df 8084 	ldr.w	r8, [pc, #132]	; 80240 <can_init+0xe0>
   801bc:	f04f 5c00 	mov.w	ip, #536870912	; 0x20000000
   801c0:	f04f 7e80 	mov.w	lr, #16777216	; 0x1000000
   801c4:	2701      	movs	r7, #1
   801c6:	0153      	lsls	r3, r2, #5
   801c8:	f103 2040 	add.w	r0, r3, #1073758208	; 0x40004000
   801cc:	f500 2030 	add.w	r0, r0, #720896	; 0xb0000
   801d0:	f8c0 9204 	str.w	r9, [r0, #516]	; 0x204
   801d4:	4443      	add	r3, r8
   801d6:	f8c3 c208 	str.w	ip, [r3, #520]	; 0x208
   801da:	f8c0 e200 	str.w	lr, [r0, #512]	; 0x200
   801de:	f8d3 021c 	ldr.w	r0, [r3, #540]	; 0x21c
   801e2:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
   801e6:	f8c3 021c 	str.w	r0, [r3, #540]	; 0x21c
   801ea:	fa07 f302 	lsl.w	r3, r7, r2
   801ee:	431c      	orrs	r4, r3
   801f0:	3201      	adds	r2, #1
   801f2:	4295      	cmp	r5, r2
   801f4:	dae7      	bge.n	801c6 <can_init+0x66>
   801f6:	b181      	cbz	r1, 8021a <can_init+0xba>
   801f8:	2300      	movs	r3, #0
   801fa:	4911      	ldr	r1, [pc, #68]	; (80240 <can_init+0xe0>)
   801fc:	f04f 5500 	mov.w	r5, #536870912	; 0x20000000
   80200:	f04f 7040 	mov.w	r0, #50331648	; 0x3000000
   80204:	eb01 1243 	add.w	r2, r1, r3, lsl #5
   80208:	f8c2 5208 	str.w	r5, [r2, #520]	; 0x208
   8020c:	f103 0210 	add.w	r2, r3, #16
   80210:	0152      	lsls	r2, r2, #5
   80212:	5088      	str	r0, [r1, r2]
   80214:	3301      	adds	r3, #1
   80216:	429e      	cmp	r6, r3
   80218:	d1f4      	bne.n	80204 <can_init+0xa4>
   8021a:	4b09      	ldr	r3, [pc, #36]	; (80240 <can_init+0xe0>)
   8021c:	605c      	str	r4, [r3, #4]
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ISER[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0x1FUL));
   8021e:	f44f 6100 	mov.w	r1, #2048	; 0x800
   80222:	4a0a      	ldr	r2, [pc, #40]	; (8024c <can_init+0xec>)
   80224:	6051      	str	r1, [r2, #4]
   80226:	681a      	ldr	r2, [r3, #0]
   80228:	f042 0201 	orr.w	r2, r2, #1
   8022c:	601a      	str	r2, [r3, #0]
   8022e:	2000      	movs	r0, #0
   80230:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   80234:	2400      	movs	r4, #0
   80236:	e7de      	b.n	801f6 <can_init+0x96>
   80238:	2001      	movs	r0, #1
   8023a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   8023e:	bf00      	nop
   80240:	400b4000 	.word	0x400b4000
   80244:	400e0e00 	.word	0x400e0e00
   80248:	1000102b 	.word	0x1000102b
   8024c:	e000e100 	.word	0xe000e100

00080250 <can_init_def_tx_rx_mb>:
   80250:	b508      	push	{r3, lr}
   80252:	2202      	movs	r2, #2
   80254:	2101      	movs	r1, #1
   80256:	4b01      	ldr	r3, [pc, #4]	; (8025c <can_init_def_tx_rx_mb+0xc>)
   80258:	4798      	blx	r3
   8025a:	bd08      	pop	{r3, pc}
   8025c:	00080161 	.word	0x00080161

00080260 <can_receive>:
   80260:	014b      	lsls	r3, r1, #5
   80262:	f103 2340 	add.w	r3, r3, #1073758208	; 0x40004000
   80266:	f503 2330 	add.w	r3, r3, #720896	; 0xb0000
   8026a:	f8d3 3210 	ldr.w	r3, [r3, #528]	; 0x210
   8026e:	f413 0f00 	tst.w	r3, #8388608	; 0x800000
   80272:	d033      	beq.n	802dc <can_receive+0x7c>
   80274:	b430      	push	{r4, r5}
   80276:	014b      	lsls	r3, r1, #5
   80278:	f103 2340 	add.w	r3, r3, #1073758208	; 0x40004000
   8027c:	f503 2330 	add.w	r3, r3, #720896	; 0xb0000
   80280:	f8d3 2214 	ldr.w	r2, [r3, #532]	; 0x214
   80284:	f8d3 4218 	ldr.w	r4, [r3, #536]	; 0x218
   80288:	f8d3 5208 	ldr.w	r5, [r3, #520]	; 0x208
   8028c:	f3c5 458a 	ubfx	r5, r5, #18, #11
   80290:	8005      	strh	r5, [r0, #0]
   80292:	f8d3 3210 	ldr.w	r3, [r3, #528]	; 0x210
   80296:	f3c3 4303 	ubfx	r3, r3, #16, #4
   8029a:	8043      	strh	r3, [r0, #2]
   8029c:	461d      	mov	r5, r3
   8029e:	b15b      	cbz	r3, 802b8 <can_receive+0x58>
   802a0:	3004      	adds	r0, #4
   802a2:	2300      	movs	r3, #0
   802a4:	2b03      	cmp	r3, #3
   802a6:	bfd9      	ittee	le
   802a8:	7002      	strble	r2, [r0, #0]
   802aa:	0a12      	lsrle	r2, r2, #8
   802ac:	7004      	strbgt	r4, [r0, #0]
   802ae:	0a24      	lsrgt	r4, r4, #8
   802b0:	3301      	adds	r3, #1
   802b2:	3001      	adds	r0, #1
   802b4:	42ab      	cmp	r3, r5
   802b6:	d1f5      	bne.n	802a4 <can_receive+0x44>
   802b8:	4b09      	ldr	r3, [pc, #36]	; (802e0 <can_receive+0x80>)
   802ba:	f101 0210 	add.w	r2, r1, #16
   802be:	0152      	lsls	r2, r2, #5
   802c0:	f04f 7080 	mov.w	r0, #16777216	; 0x1000000
   802c4:	5098      	str	r0, [r3, r2]
   802c6:	eb03 1141 	add.w	r1, r3, r1, lsl #5
   802ca:	f8d1 321c 	ldr.w	r3, [r1, #540]	; 0x21c
   802ce:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
   802d2:	f8c1 321c 	str.w	r3, [r1, #540]	; 0x21c
   802d6:	2000      	movs	r0, #0
   802d8:	bc30      	pop	{r4, r5}
   802da:	4770      	bx	lr
   802dc:	2001      	movs	r0, #1
   802de:	4770      	bx	lr
   802e0:	400b4000 	.word	0x400b4000

000802e4 <CAN0_Handler>:
 * \param void
 *
 * \retval 
 */
void CAN0_Handler( void )
{
   802e4:	b510      	push	{r4, lr}
   802e6:	b084      	sub	sp, #16
	//if(DEBUG_INTERRUPT)printf("CAN0 interrupt\n\r");
	char can_sr = CAN0->CAN_SR; 
   802e8:	4b17      	ldr	r3, [pc, #92]	; (80348 <CAN0_Handler+0x64>)
   802ea:	691c      	ldr	r4, [r3, #16]
	
	//RX interrupt
	if(can_sr & (CAN_SR_MB1 | CAN_SR_MB2) )//Only mailbox 1 and 2 specified for receiving
   802ec:	f014 0f06 	tst.w	r4, #6
   802f0:	d014      	beq.n	8031c <CAN0_Handler+0x38>
	{
		CAN_MESSAGE message;
		if(can_sr & CAN_SR_MB1)  //Mailbox 1 event
   802f2:	f014 0f02 	tst.w	r4, #2
   802f6:	d11e      	bne.n	80336 <CAN0_Handler+0x52>
		{
			can_receive(&message, 1);

		}
		else if(can_sr & CAN_SR_MB2) //Mailbox 2 event
   802f8:	f014 0f04 	tst.w	r4, #4
   802fc:	d020      	beq.n	80340 <CAN0_Handler+0x5c>
		
		{
			can_receive(&message, 2);
   802fe:	2102      	movs	r1, #2
   80300:	a801      	add	r0, sp, #4
   80302:	4b12      	ldr	r3, [pc, #72]	; (8034c <CAN0_Handler+0x68>)
   80304:	4798      	blx	r3
			printf("CAN0 message arrived in non-used mailbox\n\r");
		}

		if(DEBUG_INTERRUPT)printf("message id: %d\n\r", message.id);
		if(DEBUG_INTERRUPT)printf("message data length: %d\n\r", message.data_length);
		for (int i = 0; i < message.data_length; i++)
   80306:	f8bd 2006 	ldrh.w	r2, [sp, #6]
   8030a:	b11a      	cbz	r2, 80314 <CAN0_Handler+0x30>
   8030c:	2300      	movs	r3, #0
   8030e:	3301      	adds	r3, #1
   80310:	4293      	cmp	r3, r2
   80312:	d1fc      	bne.n	8030e <CAN0_Handler+0x2a>
			if(DEBUG_INTERRUPT)printf("%d ", message.data[i]);
		}
		if(DEBUG_INTERRUPT)printf("\n\r");
		
		// Setting step motor with X-Axis when message is received
		PWM_set_value(message.data[0]);
   80314:	f99d 0008 	ldrsb.w	r0, [sp, #8]
   80318:	4b0d      	ldr	r3, [pc, #52]	; (80350 <CAN0_Handler+0x6c>)
   8031a:	4798      	blx	r3
	}
	
	if(can_sr & CAN_SR_MB0)
   8031c:	f014 0f01 	tst.w	r4, #1
   80320:	d002      	beq.n	80328 <CAN0_Handler+0x44>
	{
		//if(DEBUG_INTERRUPT) printf("CAN0 MB0 ready to send \n\r");
		
	//Disable interrupt
		CAN0->CAN_IDR = CAN_IER_MB0;
   80322:	2201      	movs	r2, #1
   80324:	4b08      	ldr	r3, [pc, #32]	; (80348 <CAN0_Handler+0x64>)
   80326:	609a      	str	r2, [r3, #8]
 */
__STATIC_INLINE void __NVIC_ClearPendingIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ICPR[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0x1FUL));
   80328:	f44f 6200 	mov.w	r2, #2048	; 0x800
   8032c:	4b09      	ldr	r3, [pc, #36]	; (80354 <CAN0_Handler+0x70>)
   8032e:	f8c3 2184 	str.w	r2, [r3, #388]	; 0x184

	}
	
	NVIC_ClearPendingIRQ(ID_CAN0);
	//sei();*/
}
   80332:	b004      	add	sp, #16
   80334:	bd10      	pop	{r4, pc}
			can_receive(&message, 1);
   80336:	2101      	movs	r1, #1
   80338:	a801      	add	r0, sp, #4
   8033a:	4b04      	ldr	r3, [pc, #16]	; (8034c <CAN0_Handler+0x68>)
   8033c:	4798      	blx	r3
   8033e:	e7e2      	b.n	80306 <CAN0_Handler+0x22>
			printf("CAN0 message arrived in non-used mailbox\n\r");
   80340:	4805      	ldr	r0, [pc, #20]	; (80358 <CAN0_Handler+0x74>)
   80342:	4b06      	ldr	r3, [pc, #24]	; (8035c <CAN0_Handler+0x78>)
   80344:	4798      	blx	r3
   80346:	e7de      	b.n	80306 <CAN0_Handler+0x22>
   80348:	400b4000 	.word	0x400b4000
   8034c:	00080261 	.word	0x00080261
   80350:	000804e5 	.word	0x000804e5
   80354:	e000e100 	.word	0xe000e100
   80358:	00080ab8 	.word	0x00080ab8
   8035c:	00080831 	.word	0x00080831

00080360 <Dummy_Handler>:
   80360:	e7fe      	b.n	80360 <Dummy_Handler>
	...

00080364 <Reset_Handler>:
   80364:	b508      	push	{r3, lr}
   80366:	4b18      	ldr	r3, [pc, #96]	; (803c8 <Reset_Handler+0x64>)
   80368:	4a18      	ldr	r2, [pc, #96]	; (803cc <Reset_Handler+0x68>)
   8036a:	429a      	cmp	r2, r3
   8036c:	d010      	beq.n	80390 <Reset_Handler+0x2c>
   8036e:	4b18      	ldr	r3, [pc, #96]	; (803d0 <Reset_Handler+0x6c>)
   80370:	4a15      	ldr	r2, [pc, #84]	; (803c8 <Reset_Handler+0x64>)
   80372:	429a      	cmp	r2, r3
   80374:	d20c      	bcs.n	80390 <Reset_Handler+0x2c>
   80376:	3b01      	subs	r3, #1
   80378:	1a9b      	subs	r3, r3, r2
   8037a:	f023 0303 	bic.w	r3, r3, #3
   8037e:	3304      	adds	r3, #4
   80380:	4413      	add	r3, r2
   80382:	4912      	ldr	r1, [pc, #72]	; (803cc <Reset_Handler+0x68>)
   80384:	f851 0b04 	ldr.w	r0, [r1], #4
   80388:	f842 0b04 	str.w	r0, [r2], #4
   8038c:	429a      	cmp	r2, r3
   8038e:	d1f9      	bne.n	80384 <Reset_Handler+0x20>
   80390:	4b10      	ldr	r3, [pc, #64]	; (803d4 <Reset_Handler+0x70>)
   80392:	4a11      	ldr	r2, [pc, #68]	; (803d8 <Reset_Handler+0x74>)
   80394:	429a      	cmp	r2, r3
   80396:	d20a      	bcs.n	803ae <Reset_Handler+0x4a>
   80398:	3b01      	subs	r3, #1
   8039a:	1a9b      	subs	r3, r3, r2
   8039c:	f023 0303 	bic.w	r3, r3, #3
   803a0:	3304      	adds	r3, #4
   803a2:	4413      	add	r3, r2
   803a4:	2100      	movs	r1, #0
   803a6:	f842 1b04 	str.w	r1, [r2], #4
   803aa:	4293      	cmp	r3, r2
   803ac:	d1fb      	bne.n	803a6 <Reset_Handler+0x42>
   803ae:	4b0b      	ldr	r3, [pc, #44]	; (803dc <Reset_Handler+0x78>)
   803b0:	f023 4360 	bic.w	r3, r3, #3758096384	; 0xe0000000
   803b4:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
   803b8:	4a09      	ldr	r2, [pc, #36]	; (803e0 <Reset_Handler+0x7c>)
   803ba:	6093      	str	r3, [r2, #8]
   803bc:	4b09      	ldr	r3, [pc, #36]	; (803e4 <Reset_Handler+0x80>)
   803be:	4798      	blx	r3
   803c0:	4b09      	ldr	r3, [pc, #36]	; (803e8 <Reset_Handler+0x84>)
   803c2:	4798      	blx	r3
   803c4:	e7fe      	b.n	803c4 <Reset_Handler+0x60>
   803c6:	bf00      	nop
   803c8:	20000000 	.word	0x20000000
   803cc:	00080b40 	.word	0x00080b40
   803d0:	20000434 	.word	0x20000434
   803d4:	200004b8 	.word	0x200004b8
   803d8:	20000434 	.word	0x20000434
   803dc:	00080000 	.word	0x00080000
   803e0:	e000ed00 	.word	0xe000ed00
   803e4:	00080949 	.word	0x00080949
   803e8:	00080521 	.word	0x00080521

000803ec <SystemInit>:
   803ec:	f44f 6380 	mov.w	r3, #1024	; 0x400
   803f0:	4a20      	ldr	r2, [pc, #128]	; (80474 <SystemInit+0x88>)
   803f2:	6013      	str	r3, [r2, #0]
   803f4:	f502 7200 	add.w	r2, r2, #512	; 0x200
   803f8:	6013      	str	r3, [r2, #0]
   803fa:	4b1f      	ldr	r3, [pc, #124]	; (80478 <SystemInit+0x8c>)
   803fc:	6a1b      	ldr	r3, [r3, #32]
   803fe:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
   80402:	d107      	bne.n	80414 <SystemInit+0x28>
   80404:	4a1d      	ldr	r2, [pc, #116]	; (8047c <SystemInit+0x90>)
   80406:	4b1c      	ldr	r3, [pc, #112]	; (80478 <SystemInit+0x8c>)
   80408:	621a      	str	r2, [r3, #32]
   8040a:	461a      	mov	r2, r3
   8040c:	6e93      	ldr	r3, [r2, #104]	; 0x68
   8040e:	f013 0f01 	tst.w	r3, #1
   80412:	d0fb      	beq.n	8040c <SystemInit+0x20>
   80414:	4a1a      	ldr	r2, [pc, #104]	; (80480 <SystemInit+0x94>)
   80416:	4b18      	ldr	r3, [pc, #96]	; (80478 <SystemInit+0x8c>)
   80418:	621a      	str	r2, [r3, #32]
   8041a:	461a      	mov	r2, r3
   8041c:	6e93      	ldr	r3, [r2, #104]	; 0x68
   8041e:	f413 3f80 	tst.w	r3, #65536	; 0x10000
   80422:	d0fb      	beq.n	8041c <SystemInit+0x30>
   80424:	4a14      	ldr	r2, [pc, #80]	; (80478 <SystemInit+0x8c>)
   80426:	6b13      	ldr	r3, [r2, #48]	; 0x30
   80428:	f023 0303 	bic.w	r3, r3, #3
   8042c:	f043 0301 	orr.w	r3, r3, #1
   80430:	6313      	str	r3, [r2, #48]	; 0x30
   80432:	6e93      	ldr	r3, [r2, #104]	; 0x68
   80434:	f013 0f08 	tst.w	r3, #8
   80438:	d0fb      	beq.n	80432 <SystemInit+0x46>
   8043a:	4a12      	ldr	r2, [pc, #72]	; (80484 <SystemInit+0x98>)
   8043c:	4b0e      	ldr	r3, [pc, #56]	; (80478 <SystemInit+0x8c>)
   8043e:	629a      	str	r2, [r3, #40]	; 0x28
   80440:	461a      	mov	r2, r3
   80442:	6e93      	ldr	r3, [r2, #104]	; 0x68
   80444:	f013 0f02 	tst.w	r3, #2
   80448:	d0fb      	beq.n	80442 <SystemInit+0x56>
   8044a:	2211      	movs	r2, #17
   8044c:	4b0a      	ldr	r3, [pc, #40]	; (80478 <SystemInit+0x8c>)
   8044e:	631a      	str	r2, [r3, #48]	; 0x30
   80450:	461a      	mov	r2, r3
   80452:	6e93      	ldr	r3, [r2, #104]	; 0x68
   80454:	f013 0f08 	tst.w	r3, #8
   80458:	d0fb      	beq.n	80452 <SystemInit+0x66>
   8045a:	2212      	movs	r2, #18
   8045c:	4b06      	ldr	r3, [pc, #24]	; (80478 <SystemInit+0x8c>)
   8045e:	631a      	str	r2, [r3, #48]	; 0x30
   80460:	461a      	mov	r2, r3
   80462:	6e93      	ldr	r3, [r2, #104]	; 0x68
   80464:	f013 0f08 	tst.w	r3, #8
   80468:	d0fb      	beq.n	80462 <SystemInit+0x76>
   8046a:	4a07      	ldr	r2, [pc, #28]	; (80488 <SystemInit+0x9c>)
   8046c:	4b07      	ldr	r3, [pc, #28]	; (8048c <SystemInit+0xa0>)
   8046e:	601a      	str	r2, [r3, #0]
   80470:	4770      	bx	lr
   80472:	bf00      	nop
   80474:	400e0a00 	.word	0x400e0a00
   80478:	400e0600 	.word	0x400e0600
   8047c:	00370809 	.word	0x00370809
   80480:	01370809 	.word	0x01370809
   80484:	200d3f01 	.word	0x200d3f01
   80488:	0501bd00 	.word	0x0501bd00
   8048c:	20000000 	.word	0x20000000

00080490 <PWM_init>:
#define STEP_RIGHT_MAX 1740
#define STEP_LEFT_MAX 900

void PWM_init()
{
	REG_PMC_PCER1 |= PMC_PCER1_PID36;                     // Enable PWM
   80490:	4a12      	ldr	r2, [pc, #72]	; (804dc <PWM_init+0x4c>)
   80492:	6813      	ldr	r3, [r2, #0]
   80494:	f043 0310 	orr.w	r3, r3, #16
   80498:	6013      	str	r3, [r2, #0]
	REG_PIOC_ABSR |= PIO_ABSR_P19;                        // Set PWM pin perhipheral type A or B, in this case B
   8049a:	f502 6237 	add.w	r2, r2, #2928	; 0xb70
   8049e:	6813      	ldr	r3, [r2, #0]
   804a0:	f443 2300 	orr.w	r3, r3, #524288	; 0x80000
   804a4:	6013      	str	r3, [r2, #0]
	REG_PIOC_PDR |= PIO_PDR_P19;                          // Set PWM pin to an output
   804a6:	3a6c      	subs	r2, #108	; 0x6c
   804a8:	6813      	ldr	r3, [r2, #0]
   804aa:	f443 2300 	orr.w	r3, r3, #524288	; 0x80000
   804ae:	6013      	str	r3, [r2, #0]
	REG_PWM_CLK = PWM_CLK_PREA(0) | PWM_CLK_DIVA(42);     // Set the PWM clock rate to 2MHz (84MHz/42)
   804b0:	222a      	movs	r2, #42	; 0x2a
   804b2:	4b0b      	ldr	r3, [pc, #44]	; (804e0 <PWM_init+0x50>)
   804b4:	601a      	str	r2, [r3, #0]
	REG_PWM_CMR5 = PWM_CMR_CALG | PWM_CMR_CPRE_CLKA;      // Enable dual slope PWM and set the clock source as CLKA
   804b6:	f240 120b 	movw	r2, #267	; 0x10b
   804ba:	f503 7328 	add.w	r3, r3, #672	; 0x2a0
   804be:	601a      	str	r2, [r3, #0]
	REG_PWM_CPRD5 = 20000;                                // Set the PWM frequency 2MHz/(2 * 20000) = 50Hz = 20ms
   804c0:	f644 6220 	movw	r2, #20000	; 0x4e20
   804c4:	330c      	adds	r3, #12
   804c6:	601a      	str	r2, [r3, #0]
	REG_PWM_CDTY5 = 20000-STEP_CENTER;                           // Set the PWM duty cycle to 1500 - centre the servo
   804c8:	f644 02f8 	movw	r2, #18680	; 0x48f8
   804cc:	3b08      	subs	r3, #8
   804ce:	601a      	str	r2, [r3, #0]
	REG_PWM_ENA = PWM_ENA_CHID5;                          // Enable the PWM channel
   804d0:	2220      	movs	r2, #32
   804d2:	f5a3 7328 	sub.w	r3, r3, #672	; 0x2a0
   804d6:	601a      	str	r2, [r3, #0]
   804d8:	4770      	bx	lr
   804da:	bf00      	nop
   804dc:	400e0700 	.word	0x400e0700
   804e0:	40094000 	.word	0x40094000

000804e4 <PWM_set_value>:
}

long map(long x, long in_min, long in_max, long out_min, long out_max)
{
	return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;
   804e4:	f44f 7352 	mov.w	r3, #840	; 0x348
   804e8:	fb03 f000 	mul.w	r0, r3, r0
   804ec:	4b0a      	ldr	r3, [pc, #40]	; (80518 <PWM_set_value+0x34>)
   804ee:	fb83 2300 	smull	r2, r3, r3, r0
   804f2:	17c0      	asrs	r0, r0, #31
   804f4:	ebc0 1063 	rsb	r0, r0, r3, asr #5
	// Value between 0 and 100
	
	step_value = map(value, 0, 100, STEP_LEFT_MAX, STEP_RIGHT_MAX);
	//printf("%d", step_value);
	
	if(step_value < STEP_LEFT_MAX || step_value > STEP_RIGHT_MAX)
   804f8:	f500 7361 	add.w	r3, r0, #900	; 0x384
   804fc:	b280      	uxth	r0, r0
   804fe:	f5b0 7f52 	cmp.w	r0, #840	; 0x348
   80502:	d901      	bls.n	80508 <PWM_set_value+0x24>
	{
		// Error: Value is outside range
		return 1;
   80504:	2001      	movs	r0, #1
   80506:	4770      	bx	lr
	} else {
		REG_PWM_CDTY5 = 20000-step_value;
   80508:	b21b      	sxth	r3, r3
   8050a:	f5c3 439c 	rsb	r3, r3, #19968	; 0x4e00
   8050e:	3320      	adds	r3, #32
   80510:	4a02      	ldr	r2, [pc, #8]	; (8051c <PWM_set_value+0x38>)
   80512:	6013      	str	r3, [r2, #0]
	}
   80514:	4770      	bx	lr
   80516:	bf00      	nop
   80518:	51eb851f 	.word	0x51eb851f
   8051c:	400942a4 	.word	0x400942a4

00080520 <main>:
#include "can_controller.h"
#include "can_interrupt.h"
#include "PWM.h"

int main (void)
{
   80520:	b508      	push	{r3, lr}
	/* Insert system clock initialization code here (sysclk_init()). */
	SystemInit();
   80522:	4b09      	ldr	r3, [pc, #36]	; (80548 <main+0x28>)
   80524:	4798      	blx	r3
	configure_uart();
   80526:	4b09      	ldr	r3, [pc, #36]	; (8054c <main+0x2c>)
   80528:	4798      	blx	r3
	
	PWM_init();
   8052a:	4b09      	ldr	r3, [pc, #36]	; (80550 <main+0x30>)
   8052c:	4798      	blx	r3
	
	int d = can_init_def_tx_rx_mb(0x00290561);
   8052e:	4809      	ldr	r0, [pc, #36]	; (80554 <main+0x34>)
   80530:	4b09      	ldr	r3, [pc, #36]	; (80558 <main+0x38>)
   80532:	4798      	blx	r3
	printf("Node 2\n\r");
   80534:	4809      	ldr	r0, [pc, #36]	; (8055c <main+0x3c>)
   80536:	4b0a      	ldr	r3, [pc, #40]	; (80560 <main+0x40>)
   80538:	4798      	blx	r3
	
	WDT -> WDT_MR |= WDT_MR_WDDIS;
   8053a:	4a0a      	ldr	r2, [pc, #40]	; (80564 <main+0x44>)
   8053c:	6853      	ldr	r3, [r2, #4]
   8053e:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
   80542:	6053      	str	r3, [r2, #4]
   80544:	e7fe      	b.n	80544 <main+0x24>
   80546:	bf00      	nop
   80548:	000803ed 	.word	0x000803ed
   8054c:	00080855 	.word	0x00080855
   80550:	00080491 	.word	0x00080491
   80554:	00290561 	.word	0x00290561
   80558:	00080251 	.word	0x00080251
   8055c:	00080ae4 	.word	0x00080ae4
   80560:	00080831 	.word	0x00080831
   80564:	400e1a50 	.word	0x400e1a50

00080568 <prints>:
   80568:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   8056c:	460d      	mov	r5, r1
   8056e:	1e16      	subs	r6, r2, #0
   80570:	dd48      	ble.n	80604 <prints+0x9c>
   80572:	780a      	ldrb	r2, [r1, #0]
   80574:	2a00      	cmp	r2, #0
   80576:	d035      	beq.n	805e4 <prints+0x7c>
   80578:	460a      	mov	r2, r1
   8057a:	2400      	movs	r4, #0
   8057c:	3401      	adds	r4, #1
   8057e:	f812 1f01 	ldrb.w	r1, [r2, #1]!
   80582:	2900      	cmp	r1, #0
   80584:	d1fa      	bne.n	8057c <prints+0x14>
   80586:	42a6      	cmp	r6, r4
   80588:	dc2d      	bgt.n	805e6 <prints+0x7e>
   8058a:	2400      	movs	r4, #0
   8058c:	f003 0202 	and.w	r2, r3, #2
   80590:	2a00      	cmp	r2, #0
   80592:	bf0c      	ite	eq
   80594:	f04f 0820 	moveq.w	r8, #32
   80598:	f04f 0830 	movne.w	r8, #48	; 0x30
   8059c:	f013 0301 	ands.w	r3, r3, #1
   805a0:	d123      	bne.n	805ea <prints+0x82>
   805a2:	2c00      	cmp	r4, #0
   805a4:	dd28      	ble.n	805f8 <prints+0x90>
   805a6:	4626      	mov	r6, r4
   805a8:	fa5f f988 	uxtb.w	r9, r8
   805ac:	4f18      	ldr	r7, [pc, #96]	; (80610 <prints+0xa8>)
   805ae:	4648      	mov	r0, r9
   805b0:	47b8      	blx	r7
   805b2:	3e01      	subs	r6, #1
   805b4:	d1fb      	bne.n	805ae <prints+0x46>
   805b6:	7828      	ldrb	r0, [r5, #0]
   805b8:	b188      	cbz	r0, 805de <prints+0x76>
   805ba:	4f15      	ldr	r7, [pc, #84]	; (80610 <prints+0xa8>)
   805bc:	47b8      	blx	r7
   805be:	3401      	adds	r4, #1
   805c0:	f815 0f01 	ldrb.w	r0, [r5, #1]!
   805c4:	2800      	cmp	r0, #0
   805c6:	d1f9      	bne.n	805bc <prints+0x54>
   805c8:	2e00      	cmp	r6, #0
   805ca:	dd08      	ble.n	805de <prints+0x76>
   805cc:	4635      	mov	r5, r6
   805ce:	fa5f f888 	uxtb.w	r8, r8
   805d2:	4f0f      	ldr	r7, [pc, #60]	; (80610 <prints+0xa8>)
   805d4:	4640      	mov	r0, r8
   805d6:	47b8      	blx	r7
   805d8:	3d01      	subs	r5, #1
   805da:	d1fb      	bne.n	805d4 <prints+0x6c>
   805dc:	4434      	add	r4, r6
   805de:	4620      	mov	r0, r4
   805e0:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   805e4:	2400      	movs	r4, #0
   805e6:	1b34      	subs	r4, r6, r4
   805e8:	e7d0      	b.n	8058c <prints+0x24>
   805ea:	4626      	mov	r6, r4
   805ec:	7828      	ldrb	r0, [r5, #0]
   805ee:	b108      	cbz	r0, 805f4 <prints+0x8c>
   805f0:	2400      	movs	r4, #0
   805f2:	e7e2      	b.n	805ba <prints+0x52>
   805f4:	2400      	movs	r4, #0
   805f6:	e7e7      	b.n	805c8 <prints+0x60>
   805f8:	4626      	mov	r6, r4
   805fa:	461c      	mov	r4, r3
   805fc:	e7db      	b.n	805b6 <prints+0x4e>
   805fe:	f04f 0820 	mov.w	r8, #32
   80602:	e7d8      	b.n	805b6 <prints+0x4e>
   80604:	f013 0401 	ands.w	r4, r3, #1
   80608:	d0f9      	beq.n	805fe <prints+0x96>
   8060a:	f04f 0820 	mov.w	r8, #32
   8060e:	e7ed      	b.n	805ec <prints+0x84>
   80610:	000808bd 	.word	0x000808bd

00080614 <printi>:
   80614:	b5f0      	push	{r4, r5, r6, r7, lr}
   80616:	b085      	sub	sp, #20
   80618:	4607      	mov	r7, r0
   8061a:	b381      	cbz	r1, 8067e <printi+0x6a>
   8061c:	460c      	mov	r4, r1
   8061e:	b10b      	cbz	r3, 80624 <printi+0x10>
   80620:	2a0a      	cmp	r2, #10
   80622:	d038      	beq.n	80696 <printi+0x82>
   80624:	2300      	movs	r3, #0
   80626:	f88d 300f 	strb.w	r3, [sp, #15]
   8062a:	2600      	movs	r6, #0
   8062c:	2900      	cmp	r1, #0
   8062e:	d046      	beq.n	806be <printi+0xaa>
   80630:	f10d 050f 	add.w	r5, sp, #15
   80634:	990c      	ldr	r1, [sp, #48]	; 0x30
   80636:	393a      	subs	r1, #58	; 0x3a
   80638:	fbb4 f3f2 	udiv	r3, r4, r2
   8063c:	fb02 4313 	mls	r3, r2, r3, r4
   80640:	2b09      	cmp	r3, #9
   80642:	bfc8      	it	gt
   80644:	185b      	addgt	r3, r3, r1
   80646:	3330      	adds	r3, #48	; 0x30
   80648:	f805 3d01 	strb.w	r3, [r5, #-1]!
   8064c:	fbb4 f4f2 	udiv	r4, r4, r2
   80650:	2c00      	cmp	r4, #0
   80652:	d1f1      	bne.n	80638 <printi+0x24>
   80654:	b156      	cbz	r6, 8066c <printi+0x58>
   80656:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   80658:	b11b      	cbz	r3, 80662 <printi+0x4e>
   8065a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   8065c:	f013 0f02 	tst.w	r3, #2
   80660:	d125      	bne.n	806ae <printi+0x9a>
   80662:	232d      	movs	r3, #45	; 0x2d
   80664:	f805 3c01 	strb.w	r3, [r5, #-1]
   80668:	3d01      	subs	r5, #1
   8066a:	2600      	movs	r6, #0
   8066c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   8066e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   80670:	4629      	mov	r1, r5
   80672:	4638      	mov	r0, r7
   80674:	4c14      	ldr	r4, [pc, #80]	; (806c8 <printi+0xb4>)
   80676:	47a0      	blx	r4
   80678:	4430      	add	r0, r6
   8067a:	b005      	add	sp, #20
   8067c:	bdf0      	pop	{r4, r5, r6, r7, pc}
   8067e:	2330      	movs	r3, #48	; 0x30
   80680:	f88d 3004 	strb.w	r3, [sp, #4]
   80684:	2300      	movs	r3, #0
   80686:	f88d 3005 	strb.w	r3, [sp, #5]
   8068a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   8068c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   8068e:	a901      	add	r1, sp, #4
   80690:	4c0d      	ldr	r4, [pc, #52]	; (806c8 <printi+0xb4>)
   80692:	47a0      	blx	r4
   80694:	e7f1      	b.n	8067a <printi+0x66>
   80696:	2900      	cmp	r1, #0
   80698:	dac4      	bge.n	80624 <printi+0x10>
   8069a:	424c      	negs	r4, r1
   8069c:	2300      	movs	r3, #0
   8069e:	f88d 300f 	strb.w	r3, [sp, #15]
   806a2:	f10d 050f 	add.w	r5, sp, #15
   806a6:	2c00      	cmp	r4, #0
   806a8:	d0d5      	beq.n	80656 <printi+0x42>
   806aa:	2601      	movs	r6, #1
   806ac:	e7c0      	b.n	80630 <printi+0x1c>
   806ae:	202d      	movs	r0, #45	; 0x2d
   806b0:	4b06      	ldr	r3, [pc, #24]	; (806cc <printi+0xb8>)
   806b2:	4798      	blx	r3
   806b4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   806b6:	3b01      	subs	r3, #1
   806b8:	930a      	str	r3, [sp, #40]	; 0x28
   806ba:	2601      	movs	r6, #1
   806bc:	e7d6      	b.n	8066c <printi+0x58>
   806be:	461e      	mov	r6, r3
   806c0:	f10d 050f 	add.w	r5, sp, #15
   806c4:	e7d2      	b.n	8066c <printi+0x58>
   806c6:	bf00      	nop
   806c8:	00080569 	.word	0x00080569
   806cc:	000808bd 	.word	0x000808bd

000806d0 <print>:
   806d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   806d4:	b087      	sub	sp, #28
   806d6:	4680      	mov	r8, r0
   806d8:	780b      	ldrb	r3, [r1, #0]
   806da:	2b00      	cmp	r3, #0
   806dc:	f000 8094 	beq.w	80808 <print+0x138>
   806e0:	468b      	mov	fp, r1
   806e2:	4617      	mov	r7, r2
   806e4:	2500      	movs	r5, #0
   806e6:	4e4e      	ldr	r6, [pc, #312]	; (80820 <print+0x150>)
   806e8:	f8df a13c 	ldr.w	sl, [pc, #316]	; 80828 <print+0x158>
   806ec:	f8df 913c 	ldr.w	r9, [pc, #316]	; 8082c <print+0x15c>
   806f0:	e046      	b.n	80780 <print+0xb0>
   806f2:	2200      	movs	r2, #0
   806f4:	e070      	b.n	807d8 <print+0x108>
   806f6:	6839      	ldr	r1, [r7, #0]
   806f8:	3704      	adds	r7, #4
   806fa:	484a      	ldr	r0, [pc, #296]	; (80824 <print+0x154>)
   806fc:	2900      	cmp	r1, #0
   806fe:	bf08      	it	eq
   80700:	4601      	moveq	r1, r0
   80702:	4640      	mov	r0, r8
   80704:	47d0      	blx	sl
   80706:	4405      	add	r5, r0
   80708:	e035      	b.n	80776 <print+0xa6>
   8070a:	6839      	ldr	r1, [r7, #0]
   8070c:	3704      	adds	r7, #4
   8070e:	2061      	movs	r0, #97	; 0x61
   80710:	9002      	str	r0, [sp, #8]
   80712:	9301      	str	r3, [sp, #4]
   80714:	9200      	str	r2, [sp, #0]
   80716:	2301      	movs	r3, #1
   80718:	220a      	movs	r2, #10
   8071a:	4640      	mov	r0, r8
   8071c:	47c8      	blx	r9
   8071e:	4405      	add	r5, r0
   80720:	e029      	b.n	80776 <print+0xa6>
   80722:	6839      	ldr	r1, [r7, #0]
   80724:	3704      	adds	r7, #4
   80726:	2061      	movs	r0, #97	; 0x61
   80728:	9002      	str	r0, [sp, #8]
   8072a:	9301      	str	r3, [sp, #4]
   8072c:	9200      	str	r2, [sp, #0]
   8072e:	2300      	movs	r3, #0
   80730:	2210      	movs	r2, #16
   80732:	4640      	mov	r0, r8
   80734:	47c8      	blx	r9
   80736:	4405      	add	r5, r0
   80738:	e01d      	b.n	80776 <print+0xa6>
   8073a:	6839      	ldr	r1, [r7, #0]
   8073c:	3704      	adds	r7, #4
   8073e:	2041      	movs	r0, #65	; 0x41
   80740:	9002      	str	r0, [sp, #8]
   80742:	9301      	str	r3, [sp, #4]
   80744:	9200      	str	r2, [sp, #0]
   80746:	2300      	movs	r3, #0
   80748:	2210      	movs	r2, #16
   8074a:	4640      	mov	r0, r8
   8074c:	47c8      	blx	r9
   8074e:	4405      	add	r5, r0
   80750:	e011      	b.n	80776 <print+0xa6>
   80752:	6839      	ldr	r1, [r7, #0]
   80754:	3704      	adds	r7, #4
   80756:	2061      	movs	r0, #97	; 0x61
   80758:	9002      	str	r0, [sp, #8]
   8075a:	9301      	str	r3, [sp, #4]
   8075c:	9200      	str	r2, [sp, #0]
   8075e:	2300      	movs	r3, #0
   80760:	220a      	movs	r2, #10
   80762:	4640      	mov	r0, r8
   80764:	47c8      	blx	r9
   80766:	4405      	add	r5, r0
   80768:	e005      	b.n	80776 <print+0xa6>
   8076a:	46a3      	mov	fp, r4
   8076c:	f89b 0000 	ldrb.w	r0, [fp]
   80770:	47b0      	blx	r6
   80772:	3501      	adds	r5, #1
   80774:	465c      	mov	r4, fp
   80776:	f104 0b01 	add.w	fp, r4, #1
   8077a:	7863      	ldrb	r3, [r4, #1]
   8077c:	2b00      	cmp	r3, #0
   8077e:	d044      	beq.n	8080a <print+0x13a>
   80780:	2b25      	cmp	r3, #37	; 0x25
   80782:	d1f3      	bne.n	8076c <print+0x9c>
   80784:	f10b 0401 	add.w	r4, fp, #1
   80788:	f89b 3001 	ldrb.w	r3, [fp, #1]
   8078c:	2b00      	cmp	r3, #0
   8078e:	d03c      	beq.n	8080a <print+0x13a>
   80790:	2b25      	cmp	r3, #37	; 0x25
   80792:	d0ea      	beq.n	8076a <print+0x9a>
   80794:	2b2d      	cmp	r3, #45	; 0x2d
   80796:	bf06      	itte	eq
   80798:	f10b 0402 	addeq.w	r4, fp, #2
   8079c:	2301      	moveq	r3, #1
   8079e:	2300      	movne	r3, #0
   807a0:	7822      	ldrb	r2, [r4, #0]
   807a2:	2a30      	cmp	r2, #48	; 0x30
   807a4:	d105      	bne.n	807b2 <print+0xe2>
   807a6:	f043 0302 	orr.w	r3, r3, #2
   807aa:	f814 2f01 	ldrb.w	r2, [r4, #1]!
   807ae:	2a30      	cmp	r2, #48	; 0x30
   807b0:	d0f9      	beq.n	807a6 <print+0xd6>
   807b2:	7821      	ldrb	r1, [r4, #0]
   807b4:	f1a1 0230 	sub.w	r2, r1, #48	; 0x30
   807b8:	b2d2      	uxtb	r2, r2
   807ba:	2a09      	cmp	r2, #9
   807bc:	d899      	bhi.n	806f2 <print+0x22>
   807be:	2200      	movs	r2, #0
   807c0:	eb02 0282 	add.w	r2, r2, r2, lsl #2
   807c4:	3930      	subs	r1, #48	; 0x30
   807c6:	eb01 0242 	add.w	r2, r1, r2, lsl #1
   807ca:	f814 1f01 	ldrb.w	r1, [r4, #1]!
   807ce:	f1a1 0030 	sub.w	r0, r1, #48	; 0x30
   807d2:	b2c0      	uxtb	r0, r0
   807d4:	2809      	cmp	r0, #9
   807d6:	d9f3      	bls.n	807c0 <print+0xf0>
   807d8:	2973      	cmp	r1, #115	; 0x73
   807da:	d08c      	beq.n	806f6 <print+0x26>
   807dc:	2964      	cmp	r1, #100	; 0x64
   807de:	d094      	beq.n	8070a <print+0x3a>
   807e0:	2978      	cmp	r1, #120	; 0x78
   807e2:	d09e      	beq.n	80722 <print+0x52>
   807e4:	2958      	cmp	r1, #88	; 0x58
   807e6:	d0a8      	beq.n	8073a <print+0x6a>
   807e8:	2975      	cmp	r1, #117	; 0x75
   807ea:	d0b2      	beq.n	80752 <print+0x82>
   807ec:	2963      	cmp	r1, #99	; 0x63
   807ee:	d1c2      	bne.n	80776 <print+0xa6>
   807f0:	6839      	ldr	r1, [r7, #0]
   807f2:	3704      	adds	r7, #4
   807f4:	f88d 1014 	strb.w	r1, [sp, #20]
   807f8:	2100      	movs	r1, #0
   807fa:	f88d 1015 	strb.w	r1, [sp, #21]
   807fe:	a905      	add	r1, sp, #20
   80800:	4640      	mov	r0, r8
   80802:	47d0      	blx	sl
   80804:	4405      	add	r5, r0
   80806:	e7b6      	b.n	80776 <print+0xa6>
   80808:	2500      	movs	r5, #0
   8080a:	f1b8 0f00 	cmp.w	r8, #0
   8080e:	d003      	beq.n	80818 <print+0x148>
   80810:	f8d8 3000 	ldr.w	r3, [r8]
   80814:	2200      	movs	r2, #0
   80816:	701a      	strb	r2, [r3, #0]
   80818:	4628      	mov	r0, r5
   8081a:	b007      	add	sp, #28
   8081c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   80820:	000808bd 	.word	0x000808bd
   80824:	00080af0 	.word	0x00080af0
   80828:	00080569 	.word	0x00080569
   8082c:	00080615 	.word	0x00080615

00080830 <printf>:
   80830:	b40f      	push	{r0, r1, r2, r3}
   80832:	b500      	push	{lr}
   80834:	b083      	sub	sp, #12
   80836:	aa04      	add	r2, sp, #16
   80838:	f852 1b04 	ldr.w	r1, [r2], #4
   8083c:	9201      	str	r2, [sp, #4]
   8083e:	2000      	movs	r0, #0
   80840:	4b03      	ldr	r3, [pc, #12]	; (80850 <printf+0x20>)
   80842:	4798      	blx	r3
   80844:	b003      	add	sp, #12
   80846:	f85d eb04 	ldr.w	lr, [sp], #4
   8084a:	b004      	add	sp, #16
   8084c:	4770      	bx	lr
   8084e:	bf00      	nop
   80850:	000806d1 	.word	0x000806d1

00080854 <configure_uart>:
   80854:	4b16      	ldr	r3, [pc, #88]	; (808b0 <configure_uart+0x5c>)
   80856:	2200      	movs	r2, #0
   80858:	701a      	strb	r2, [r3, #0]
   8085a:	705a      	strb	r2, [r3, #1]
   8085c:	4b15      	ldr	r3, [pc, #84]	; (808b4 <configure_uart+0x60>)
   8085e:	f44f 7140 	mov.w	r1, #768	; 0x300
   80862:	6459      	str	r1, [r3, #68]	; 0x44
   80864:	6059      	str	r1, [r3, #4]
   80866:	6f1a      	ldr	r2, [r3, #112]	; 0x70
   80868:	6f18      	ldr	r0, [r3, #112]	; 0x70
   8086a:	4002      	ands	r2, r0
   8086c:	f422 7240 	bic.w	r2, r2, #768	; 0x300
   80870:	671a      	str	r2, [r3, #112]	; 0x70
   80872:	6659      	str	r1, [r3, #100]	; 0x64
   80874:	f44f 7280 	mov.w	r2, #256	; 0x100
   80878:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
   8087c:	611a      	str	r2, [r3, #16]
   8087e:	f503 7300 	add.w	r3, r3, #512	; 0x200
   80882:	21ac      	movs	r1, #172	; 0xac
   80884:	6019      	str	r1, [r3, #0]
   80886:	f240 2123 	movw	r1, #547	; 0x223
   8088a:	6219      	str	r1, [r3, #32]
   8088c:	f44f 6100 	mov.w	r1, #2048	; 0x800
   80890:	6059      	str	r1, [r3, #4]
   80892:	f240 2102 	movw	r1, #514	; 0x202
   80896:	f8c3 1120 	str.w	r1, [r3, #288]	; 0x120
   8089a:	f04f 31ff 	mov.w	r1, #4294967295
   8089e:	60d9      	str	r1, [r3, #12]
   808a0:	21e1      	movs	r1, #225	; 0xe1
   808a2:	6099      	str	r1, [r3, #8]
    NVIC->ISER[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0x1FUL));
   808a4:	4904      	ldr	r1, [pc, #16]	; (808b8 <configure_uart+0x64>)
   808a6:	600a      	str	r2, [r1, #0]
   808a8:	2250      	movs	r2, #80	; 0x50
   808aa:	601a      	str	r2, [r3, #0]
   808ac:	4770      	bx	lr
   808ae:	bf00      	nop
   808b0:	20000450 	.word	0x20000450
   808b4:	400e0e00 	.word	0x400e0e00
   808b8:	e000e100 	.word	0xe000e100

000808bc <uart_putchar>:
   808bc:	4b07      	ldr	r3, [pc, #28]	; (808dc <uart_putchar+0x20>)
   808be:	695b      	ldr	r3, [r3, #20]
   808c0:	f013 0f02 	tst.w	r3, #2
   808c4:	d008      	beq.n	808d8 <uart_putchar+0x1c>
   808c6:	4b05      	ldr	r3, [pc, #20]	; (808dc <uart_putchar+0x20>)
   808c8:	61d8      	str	r0, [r3, #28]
   808ca:	461a      	mov	r2, r3
   808cc:	6953      	ldr	r3, [r2, #20]
   808ce:	f413 7f00 	tst.w	r3, #512	; 0x200
   808d2:	d0fb      	beq.n	808cc <uart_putchar+0x10>
   808d4:	2000      	movs	r0, #0
   808d6:	4770      	bx	lr
   808d8:	2001      	movs	r0, #1
   808da:	4770      	bx	lr
   808dc:	400e0800 	.word	0x400e0800

000808e0 <UART_Handler>:
   808e0:	b508      	push	{r3, lr}
   808e2:	4b15      	ldr	r3, [pc, #84]	; (80938 <UART_Handler+0x58>)
   808e4:	695b      	ldr	r3, [r3, #20]
   808e6:	f013 0fe0 	tst.w	r3, #224	; 0xe0
   808ea:	d003      	beq.n	808f4 <UART_Handler+0x14>
   808ec:	f44f 71a8 	mov.w	r1, #336	; 0x150
   808f0:	4a11      	ldr	r2, [pc, #68]	; (80938 <UART_Handler+0x58>)
   808f2:	6011      	str	r1, [r2, #0]
   808f4:	f013 0f01 	tst.w	r3, #1
   808f8:	d012      	beq.n	80920 <UART_Handler+0x40>
   808fa:	4810      	ldr	r0, [pc, #64]	; (8093c <UART_Handler+0x5c>)
   808fc:	7842      	ldrb	r2, [r0, #1]
   808fe:	1c53      	adds	r3, r2, #1
   80900:	4259      	negs	r1, r3
   80902:	f003 033f 	and.w	r3, r3, #63	; 0x3f
   80906:	f001 013f 	and.w	r1, r1, #63	; 0x3f
   8090a:	bf58      	it	pl
   8090c:	424b      	negpl	r3, r1
   8090e:	7801      	ldrb	r1, [r0, #0]
   80910:	428b      	cmp	r3, r1
   80912:	d006      	beq.n	80922 <UART_Handler+0x42>
   80914:	4908      	ldr	r1, [pc, #32]	; (80938 <UART_Handler+0x58>)
   80916:	6988      	ldr	r0, [r1, #24]
   80918:	4908      	ldr	r1, [pc, #32]	; (8093c <UART_Handler+0x5c>)
   8091a:	440a      	add	r2, r1
   8091c:	7090      	strb	r0, [r2, #2]
   8091e:	704b      	strb	r3, [r1, #1]
   80920:	bd08      	pop	{r3, pc}
   80922:	4807      	ldr	r0, [pc, #28]	; (80940 <UART_Handler+0x60>)
   80924:	4b07      	ldr	r3, [pc, #28]	; (80944 <UART_Handler+0x64>)
   80926:	4798      	blx	r3
   80928:	4b03      	ldr	r3, [pc, #12]	; (80938 <UART_Handler+0x58>)
   8092a:	699a      	ldr	r2, [r3, #24]
   8092c:	4b03      	ldr	r3, [pc, #12]	; (8093c <UART_Handler+0x5c>)
   8092e:	7859      	ldrb	r1, [r3, #1]
   80930:	440b      	add	r3, r1
   80932:	709a      	strb	r2, [r3, #2]
   80934:	bd08      	pop	{r3, pc}
   80936:	bf00      	nop
   80938:	400e0800 	.word	0x400e0800
   8093c:	20000450 	.word	0x20000450
   80940:	00080af8 	.word	0x00080af8
   80944:	00080831 	.word	0x00080831

00080948 <__libc_init_array>:
   80948:	b570      	push	{r4, r5, r6, lr}
   8094a:	4e0f      	ldr	r6, [pc, #60]	; (80988 <__libc_init_array+0x40>)
   8094c:	4d0f      	ldr	r5, [pc, #60]	; (8098c <__libc_init_array+0x44>)
   8094e:	1b76      	subs	r6, r6, r5
   80950:	10b6      	asrs	r6, r6, #2
   80952:	bf18      	it	ne
   80954:	2400      	movne	r4, #0
   80956:	d005      	beq.n	80964 <__libc_init_array+0x1c>
   80958:	3401      	adds	r4, #1
   8095a:	f855 3b04 	ldr.w	r3, [r5], #4
   8095e:	4798      	blx	r3
   80960:	42a6      	cmp	r6, r4
   80962:	d1f9      	bne.n	80958 <__libc_init_array+0x10>
   80964:	4e0a      	ldr	r6, [pc, #40]	; (80990 <__libc_init_array+0x48>)
   80966:	4d0b      	ldr	r5, [pc, #44]	; (80994 <__libc_init_array+0x4c>)
   80968:	f000 f8d8 	bl	80b1c <_init>
   8096c:	1b76      	subs	r6, r6, r5
   8096e:	10b6      	asrs	r6, r6, #2
   80970:	bf18      	it	ne
   80972:	2400      	movne	r4, #0
   80974:	d006      	beq.n	80984 <__libc_init_array+0x3c>
   80976:	3401      	adds	r4, #1
   80978:	f855 3b04 	ldr.w	r3, [r5], #4
   8097c:	4798      	blx	r3
   8097e:	42a6      	cmp	r6, r4
   80980:	d1f9      	bne.n	80976 <__libc_init_array+0x2e>
   80982:	bd70      	pop	{r4, r5, r6, pc}
   80984:	bd70      	pop	{r4, r5, r6, pc}
   80986:	bf00      	nop
   80988:	00080b28 	.word	0x00080b28
   8098c:	00080b28 	.word	0x00080b28
   80990:	00080b30 	.word	0x00080b30
   80994:	00080b28 	.word	0x00080b28

00080998 <register_fini>:
   80998:	4b02      	ldr	r3, [pc, #8]	; (809a4 <register_fini+0xc>)
   8099a:	b113      	cbz	r3, 809a2 <register_fini+0xa>
   8099c:	4802      	ldr	r0, [pc, #8]	; (809a8 <register_fini+0x10>)
   8099e:	f000 b805 	b.w	809ac <atexit>
   809a2:	4770      	bx	lr
   809a4:	00000000 	.word	0x00000000
   809a8:	000809b9 	.word	0x000809b9

000809ac <atexit>:
   809ac:	2300      	movs	r3, #0
   809ae:	4601      	mov	r1, r0
   809b0:	461a      	mov	r2, r3
   809b2:	4618      	mov	r0, r3
   809b4:	f000 b81e 	b.w	809f4 <__register_exitproc>

000809b8 <__libc_fini_array>:
   809b8:	b538      	push	{r3, r4, r5, lr}
   809ba:	4c0a      	ldr	r4, [pc, #40]	; (809e4 <__libc_fini_array+0x2c>)
   809bc:	4d0a      	ldr	r5, [pc, #40]	; (809e8 <__libc_fini_array+0x30>)
   809be:	1b64      	subs	r4, r4, r5
   809c0:	10a4      	asrs	r4, r4, #2
   809c2:	d00a      	beq.n	809da <__libc_fini_array+0x22>
   809c4:	f104 4380 	add.w	r3, r4, #1073741824	; 0x40000000
   809c8:	3b01      	subs	r3, #1
   809ca:	eb05 0583 	add.w	r5, r5, r3, lsl #2
   809ce:	3c01      	subs	r4, #1
   809d0:	f855 3904 	ldr.w	r3, [r5], #-4
   809d4:	4798      	blx	r3
   809d6:	2c00      	cmp	r4, #0
   809d8:	d1f9      	bne.n	809ce <__libc_fini_array+0x16>
   809da:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
   809de:	f000 b8a7 	b.w	80b30 <_fini>
   809e2:	bf00      	nop
   809e4:	00080b40 	.word	0x00080b40
   809e8:	00080b3c 	.word	0x00080b3c

000809ec <__retarget_lock_acquire_recursive>:
   809ec:	4770      	bx	lr
   809ee:	bf00      	nop

000809f0 <__retarget_lock_release_recursive>:
   809f0:	4770      	bx	lr
   809f2:	bf00      	nop

000809f4 <__register_exitproc>:
   809f4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   809f8:	4d2c      	ldr	r5, [pc, #176]	; (80aac <__register_exitproc+0xb8>)
   809fa:	4606      	mov	r6, r0
   809fc:	6828      	ldr	r0, [r5, #0]
   809fe:	4698      	mov	r8, r3
   80a00:	460f      	mov	r7, r1
   80a02:	4691      	mov	r9, r2
   80a04:	f7ff fff2 	bl	809ec <__retarget_lock_acquire_recursive>
   80a08:	4b29      	ldr	r3, [pc, #164]	; (80ab0 <__register_exitproc+0xbc>)
   80a0a:	681c      	ldr	r4, [r3, #0]
   80a0c:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
   80a10:	2b00      	cmp	r3, #0
   80a12:	d03e      	beq.n	80a92 <__register_exitproc+0x9e>
   80a14:	685a      	ldr	r2, [r3, #4]
   80a16:	2a1f      	cmp	r2, #31
   80a18:	dc1c      	bgt.n	80a54 <__register_exitproc+0x60>
   80a1a:	f102 0e01 	add.w	lr, r2, #1
   80a1e:	b176      	cbz	r6, 80a3e <__register_exitproc+0x4a>
   80a20:	2101      	movs	r1, #1
   80a22:	eb03 0482 	add.w	r4, r3, r2, lsl #2
   80a26:	f8c4 9088 	str.w	r9, [r4, #136]	; 0x88
   80a2a:	f8d3 0188 	ldr.w	r0, [r3, #392]	; 0x188
   80a2e:	4091      	lsls	r1, r2
   80a30:	4308      	orrs	r0, r1
   80a32:	2e02      	cmp	r6, #2
   80a34:	f8c3 0188 	str.w	r0, [r3, #392]	; 0x188
   80a38:	f8c4 8108 	str.w	r8, [r4, #264]	; 0x108
   80a3c:	d023      	beq.n	80a86 <__register_exitproc+0x92>
   80a3e:	3202      	adds	r2, #2
   80a40:	f8c3 e004 	str.w	lr, [r3, #4]
   80a44:	6828      	ldr	r0, [r5, #0]
   80a46:	f843 7022 	str.w	r7, [r3, r2, lsl #2]
   80a4a:	f7ff ffd1 	bl	809f0 <__retarget_lock_release_recursive>
   80a4e:	2000      	movs	r0, #0
   80a50:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   80a54:	4b17      	ldr	r3, [pc, #92]	; (80ab4 <__register_exitproc+0xc0>)
   80a56:	b30b      	cbz	r3, 80a9c <__register_exitproc+0xa8>
   80a58:	f44f 70c8 	mov.w	r0, #400	; 0x190
   80a5c:	f3af 8000 	nop.w
   80a60:	4603      	mov	r3, r0
   80a62:	b1d8      	cbz	r0, 80a9c <__register_exitproc+0xa8>
   80a64:	2000      	movs	r0, #0
   80a66:	f8d4 1148 	ldr.w	r1, [r4, #328]	; 0x148
   80a6a:	f04f 0e01 	mov.w	lr, #1
   80a6e:	6058      	str	r0, [r3, #4]
   80a70:	6019      	str	r1, [r3, #0]
   80a72:	4602      	mov	r2, r0
   80a74:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
   80a78:	f8c3 0188 	str.w	r0, [r3, #392]	; 0x188
   80a7c:	f8c3 018c 	str.w	r0, [r3, #396]	; 0x18c
   80a80:	2e00      	cmp	r6, #0
   80a82:	d0dc      	beq.n	80a3e <__register_exitproc+0x4a>
   80a84:	e7cc      	b.n	80a20 <__register_exitproc+0x2c>
   80a86:	f8d3 018c 	ldr.w	r0, [r3, #396]	; 0x18c
   80a8a:	4301      	orrs	r1, r0
   80a8c:	f8c3 118c 	str.w	r1, [r3, #396]	; 0x18c
   80a90:	e7d5      	b.n	80a3e <__register_exitproc+0x4a>
   80a92:	f504 73a6 	add.w	r3, r4, #332	; 0x14c
   80a96:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
   80a9a:	e7bb      	b.n	80a14 <__register_exitproc+0x20>
   80a9c:	6828      	ldr	r0, [r5, #0]
   80a9e:	f7ff ffa7 	bl	809f0 <__retarget_lock_release_recursive>
   80aa2:	f04f 30ff 	mov.w	r0, #4294967295
   80aa6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   80aaa:	bf00      	nop
   80aac:	20000430 	.word	0x20000430
   80ab0:	00080b18 	.word	0x00080b18
   80ab4:	00000000 	.word	0x00000000
   80ab8:	304e4143 	.word	0x304e4143
   80abc:	73656d20 	.word	0x73656d20
   80ac0:	65676173 	.word	0x65676173
   80ac4:	72726120 	.word	0x72726120
   80ac8:	64657669 	.word	0x64657669
   80acc:	206e6920 	.word	0x206e6920
   80ad0:	2d6e6f6e 	.word	0x2d6e6f6e
   80ad4:	64657375 	.word	0x64657375
   80ad8:	69616d20 	.word	0x69616d20
   80adc:	786f626c 	.word	0x786f626c
   80ae0:	00000d0a 	.word	0x00000d0a
   80ae4:	65646f4e 	.word	0x65646f4e
   80ae8:	0d0a3220 	.word	0x0d0a3220
   80aec:	00000000 	.word	0x00000000
   80af0:	6c756e28 	.word	0x6c756e28
   80af4:	0000296c 	.word	0x0000296c
   80af8:	3a525245 	.word	0x3a525245
   80afc:	52415520 	.word	0x52415520
   80b00:	58522054 	.word	0x58522054
   80b04:	66756220 	.word	0x66756220
   80b08:	20726566 	.word	0x20726566
   80b0c:	66207369 	.word	0x66207369
   80b10:	0a6c6c75 	.word	0x0a6c6c75
   80b14:	0000000d 	.word	0x0000000d

00080b18 <_global_impure_ptr>:
   80b18:	20000008                                ... 

00080b1c <_init>:
   80b1c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   80b1e:	bf00      	nop
   80b20:	bcf8      	pop	{r3, r4, r5, r6, r7}
   80b22:	bc08      	pop	{r3}
   80b24:	469e      	mov	lr, r3
   80b26:	4770      	bx	lr

00080b28 <__init_array_start>:
   80b28:	00080999 	.word	0x00080999

00080b2c <__frame_dummy_init_array_entry>:
   80b2c:	00080119                                ....

00080b30 <_fini>:
   80b30:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   80b32:	bf00      	nop
   80b34:	bcf8      	pop	{r3, r4, r5, r6, r7}
   80b36:	bc08      	pop	{r3}
   80b38:	469e      	mov	lr, r3
   80b3a:	4770      	bx	lr

00080b3c <__fini_array_start>:
   80b3c:	000800f5 	.word	0x000800f5
