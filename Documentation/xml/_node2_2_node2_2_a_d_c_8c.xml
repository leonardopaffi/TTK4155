<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="_node2_2_node2_2_a_d_c_8c" kind="file" language="C++">
    <compoundname>ADC.c</compoundname>
    <includes refid="_node2_2_node2_2_a_d_c_8h" local="yes">ADC.h</includes>
    <incdepgraph>
      <node id="1">
        <label>D:/Progetti/TTK4155/Node2/Node2/ADC.c</label>
        <link refid="_node2_2_node2_2_a_d_c_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>ADC.h</label>
        <link refid="_node2_2_node2_2_a_d_c_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>sam.h</label>
      </node>
      <node id="3">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="_node2_2_node2_2_a_d_c_8c_1a69f491a768a81c2cf99ee2653ad3002d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ADC_init</definition>
        <argsstring>()</argsstring>
        <name>ADC_init</name>
        <briefdescription>
<para>Initialization function for the ADC. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Progetti/TTK4155/Node2/Node2/ADC.c" line="3" column="6" bodyfile="D:/Progetti/TTK4155/Node2/Node2/ADC.c" bodystart="3" bodyend="9"/>
      </memberdef>
      <memberdef kind="function" id="_node2_2_node2_2_a_d_c_8c_1a5bbea9320798ccfd596c7925f65e7734" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ADC_read</definition>
        <argsstring>()</argsstring>
        <name>ADC_read</name>
        <briefdescription>
<para>Read data for the ADC. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>int </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Progetti/TTK4155/Node2/Node2/ADC.c" line="11" column="5" bodyfile="D:/Progetti/TTK4155/Node2/Node2/ADC.c" bodystart="11" bodyend="15"/>
      </memberdef>
      <memberdef kind="function" id="_node2_2_node2_2_a_d_c_8c_1a3b1c413d7f71131713d5854b208f4e44" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ADC_check_goal</definition>
        <argsstring>()</argsstring>
        <name>ADC_check_goal</name>
        <briefdescription>
<para>Check if the user has scored a goal. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>int Return 1 if the goal has been scored </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Progetti/TTK4155/Node2/Node2/ADC.c" line="17" column="5" bodyfile="D:/Progetti/TTK4155/Node2/Node2/ADC.c" bodystart="17" bodyend="26"/>
      </memberdef>
      <memberdef kind="function" id="_node2_2_node2_2_a_d_c_8c_1a461ee45e98428f41ccad403d65fcd69d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ADC_print</definition>
        <argsstring>()</argsstring>
        <name>ADC_print</name>
        <briefdescription>
<para>Debug function that prints ADC data. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Progetti/TTK4155/Node2/Node2/ADC.c" line="28" column="6" bodyfile="D:/Progetti/TTK4155/Node2/Node2/ADC.c" bodystart="28" bodyend="31"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_node2_2_node2_2_a_d_c_8h" kindref="compound">ADC.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_node2_2_node2_2_a_d_c_8c_1a69f491a768a81c2cf99ee2653ad3002d" kindref="member">ADC_init</ref>()</highlight></codeline>
<codeline lineno="4"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5"><highlight class="normal"><sp/><sp/><sp/><sp/>PMC-&gt;PMC_PCER1<sp/>|=<sp/>PMC_PCER1_PID37;<sp/></highlight><highlight class="comment">//ADC<sp/>CLK<sp/>ON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/><sp/><sp/>ADC-&gt;ADC_MR<sp/>|=<sp/>ADC_MR_FREERUN_ON;</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/>ADC-&gt;ADC_CHER<sp/>|=<sp/>ADC_CHER_CH0;<sp/></highlight><highlight class="comment">//<sp/>CH0<sp/>ON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/>ADC-&gt;ADC_CR<sp/>|=<sp/>ADC_CR_START;<sp/><sp/><sp/></highlight><highlight class="comment">//starts<sp/>analog-to-digital<sp/>conversion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_node2_2_node2_2_a_d_c_8c_1a5bbea9320798ccfd596c7925f65e7734" kindref="member">ADC_read</ref>()</highlight></codeline>
<codeline lineno="12"><highlight class="normal">{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Getting<sp/>data<sp/>in<sp/>the<sp/>register</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ADC-&gt;ADC_CDR[0];</highlight></codeline>
<codeline lineno="15"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_node2_2_node2_2_a_d_c_8c_1a3b1c413d7f71131713d5854b208f4e44" kindref="member">ADC_check_goal</ref>()</highlight></codeline>
<codeline lineno="18"><highlight class="normal">{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_node2_2_node2_2_a_d_c_8c_1a5bbea9320798ccfd596c7925f65e7734" kindref="member">ADC_read</ref>()<sp/>&lt;<sp/><ref refid="_node2_2_node2_2_a_d_c_8h_1aa5e01ec55f233bf763f4f095bcfaaaa0" kindref="member">ADC_LIMIT</ref>)</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>A<sp/>GOAL<sp/>is<sp/>detected</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="26"><highlight class="normal">}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_node2_2_node2_2_a_d_c_8c_1a461ee45e98428f41ccad403d65fcd69d" kindref="member">ADC_print</ref>()</highlight></codeline>
<codeline lineno="29"><highlight class="normal">{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="printf-stdarg_8c_1a98631211a4a8aee62f572375d5b637be" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;adc:<sp/>%d\n\r&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)ADC-&gt;ADC_CDR[0]);</highlight></codeline>
<codeline lineno="31"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="D:/Progetti/TTK4155/Node2/Node2/ADC.c"/>
  </compounddef>
</doxygen>
