<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="_node1_2_t_t_k4155_2_a_d_c_8c" kind="file" language="C++">
    <compoundname>ADC.c</compoundname>
    <includes refid="_node1_2_t_t_k4155_2_a_d_c_8h" local="yes">ADC.h</includes>
    <incdepgraph>
      <node id="1">
        <label>D:/Progetti/TTK4155/Node1/TTK4155/ADC.c</label>
        <link refid="_node1_2_t_t_k4155_2_a_d_c_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>ADC.h</label>
        <link refid="_node1_2_t_t_k4155_2_a_d_c_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>avr/delay.h</label>
      </node>
      <node id="4">
        <label>avr/interrupt.h</label>
      </node>
      <node id="3">
        <label>avr/io.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="_node1_2_t_t_k4155_2_a_d_c_8c_1a858d347ca0f81c2a28921fae6c895e38" prot="public" static="no" mutable="no">
        <type>volatile char *</type>
        <definition>volatile char* ext_adc</definition>
        <argsstring></argsstring>
        <name>ext_adc</name>
        <initializer>= <ref refid="_node1_2_t_t_k4155_2_a_d_c_8h_1a4385d9ed43412491c7fa3aed35590724" kindref="member">ADC_ADDRESS</ref></initializer>
        <briefdescription>
<para>Pointer to the array of all addresses we will write to. ADC starting at 0x1400. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Progetti/TTK4155/Node1/TTK4155/ADC.c" line="7" column="15" bodyfile="D:/Progetti/TTK4155/Node1/TTK4155/ADC.c" bodystart="7" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="_node1_2_t_t_k4155_2_a_d_c_8c_1a1e942fcd91f79d49e4ddb8d7e9d3ef95" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void adc_init</definition>
        <argsstring>()</argsstring>
        <name>adc_init</name>
        <briefdescription>
<para>Initialization function of the ADC. </para>
        </briefdescription>
        <detaileddescription>
<para>Initializes the ADC and its clock signal. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Progetti/TTK4155/Node1/TTK4155/ADC.c" line="9" column="6" bodyfile="D:/Progetti/TTK4155/Node1/TTK4155/ADC.c" bodystart="9" bodyend="22"/>
      </memberdef>
      <memberdef kind="function" id="_node1_2_t_t_k4155_2_a_d_c_8c_1ac1513709a7d29dc6590d9371b8cd0556" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t adc_read</definition>
        <argsstring>(uint8_t channel)</argsstring>
        <name>adc_read</name>
        <param>
          <type>uint8_t</type>
          <declname>channel</declname>
        </param>
        <briefdescription>
<para>Reading data from the ADC. </para>
        </briefdescription>
        <detaileddescription>
<para>Reads a certain analog channel of the ADC.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>uint8_t </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Progetti/TTK4155/Node1/TTK4155/ADC.c" line="24" column="9" bodyfile="D:/Progetti/TTK4155/Node1/TTK4155/ADC.c" bodystart="24" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="_node1_2_t_t_k4155_2_a_d_c_8c_1adc13db4a167320d251113623317587d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void adc_read_all_channels</definition>
        <argsstring>()</argsstring>
        <name>adc_read_all_channels</name>
        <briefdescription>
<para>Debug function to read all the channels from the ADC. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Progetti/TTK4155/Node1/TTK4155/ADC.c" line="55" column="6" bodyfile="D:/Progetti/TTK4155/Node1/TTK4155/ADC.c" bodystart="55" bodyend="63"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_node2_2_node2_2_a_d_c_8h" kindref="compound">ADC.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="_node1_2_t_t_k4155_2_a_d_c_8c_1a858d347ca0f81c2a28921fae6c895e38" kindref="member">ext_adc</ref><sp/>=<sp/><ref refid="_node1_2_t_t_k4155_2_a_d_c_8h_1a4385d9ed43412491c7fa3aed35590724" kindref="member">ADC_ADDRESS</ref>;</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_node1_2_t_t_k4155_2_a_d_c_8c_1a1e942fcd91f79d49e4ddb8d7e9d3ef95" kindref="member">adc_init</ref>()</highlight></codeline>
<codeline lineno="10"><highlight class="normal">{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/>SFIOR<sp/>=<sp/>0x01;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>PB0<sp/>as<sp/>OUTPUT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/>DDRB<sp/>=<sp/>0x01;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>PORTB<sp/>=<sp/>0x01;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>CTC,<sp/>Toggle<sp/>OC0<sp/>on<sp/>compare<sp/>match,<sp/>no<sp/>pre-scaler</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>TCCR0<sp/>|=<sp/>(1&lt;&lt;WGM01)<sp/>|<sp/>(1&lt;&lt;COM00)<sp/>|<sp/>(1&lt;&lt;CS00);</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Setting<sp/>Output<sp/>Compare<sp/>Register<sp/>to<sp/>force<sp/>the<sp/>oscillator<sp/>to<sp/>500kHz</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Pin<sp/>n.1<sp/>(OC0)<sp/>is<sp/>used</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>OCR0<sp/>=<sp/>0x04;</highlight></codeline>
<codeline lineno="22"><highlight class="normal">}</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal">uint8_t<sp/><ref refid="_node1_2_t_t_k4155_2_a_d_c_8c_1ac1513709a7d29dc6590d9371b8cd0556" kindref="member">adc_read</ref>(uint8_t<sp/>channel)</highlight></codeline>
<codeline lineno="25"><highlight class="normal">{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>0x1400<sp/>-&gt;<sp/>0001<sp/>0100<sp/>0000<sp/>0000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="_node1_2_t_t_k4155_2_a_d_c_8c_1a858d347ca0f81c2a28921fae6c895e38" kindref="member">ext_adc</ref><sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)0x1400;<sp/></highlight><highlight class="comment">//<sp/>Start<sp/>address<sp/>for<sp/>the<sp/>ADC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>offset_adc=<sp/>0x01;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>value<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Setting<sp/>ADC<sp/>mode<sp/>for<sp/>multiplexer<sp/>configuration<sp/>(page<sp/>8<sp/>of<sp/>ADC<sp/>datasheet)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>setting<sp/>channels</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>channel<sp/>0<sp/>uint8_t<sp/>adc_mode<sp/>=<sp/>0b1000<sp/>0001;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>adc_mode<sp/>=<sp/>(1<sp/>&lt;&lt;<sp/><ref refid="_node1_2_t_t_k4155_2_a_d_c_8h_1ab7b5fa96d786166f677a56f66852eed7" kindref="member">SINGLE_CHANNEL_SAMPLE</ref>)<sp/>|<sp/>(channel);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_node1_2_t_t_k4155_2_a_d_c_8c_1a858d347ca0f81c2a28921fae6c895e38" kindref="member">ext_adc</ref>[offset_adc]<sp/>=<sp/>adc_mode;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Wait<sp/>for<sp/>conversion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>_delay_us(5000);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Getting<sp/>value<sp/>from<sp/>ADC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>value<sp/>=<sp/><ref refid="_node1_2_t_t_k4155_2_a_d_c_8c_1a858d347ca0f81c2a28921fae6c895e38" kindref="member">ext_adc</ref>[offset_adc];</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Overflow<sp/>detection</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(value<sp/>&gt;<sp/>255)</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>=<sp/>255;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(value<sp/>&lt;=<sp/>0)</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>the<sp/>value<sp/>inside<sp/>the<sp/>ADC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>value;</highlight></codeline>
<codeline lineno="53"><highlight class="normal">}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_node1_2_t_t_k4155_2_a_d_c_8c_1adc13db4a167320d251113623317587d0" kindref="member">adc_read_all_channels</ref>()</highlight></codeline>
<codeline lineno="56"><highlight class="normal">{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>4;<sp/>i++)</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="printf-stdarg_8c_1a98631211a4a8aee62f572375d5b637be" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;Channel<sp/>%d:<sp/>%d<sp/>\n\r&quot;</highlight><highlight class="normal">,<sp/>i,<sp/><ref refid="_node1_2_t_t_k4155_2_a_d_c_8c_1ac1513709a7d29dc6590d9371b8cd0556" kindref="member">adc_read</ref>(i));</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="printf-stdarg_8c_1a98631211a4a8aee62f572375d5b637be" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;\n\r&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>_delay_ms(5000);</highlight></codeline>
<codeline lineno="63"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="D:/Progetti/TTK4155/Node1/TTK4155/ADC.c"/>
  </compounddef>
</doxygen>
